------------------- A ---------------
-- 1.CUSTOM_ID
SELECT C.CUSTOM_ID, SUM(P.PRICE)
FROM TBL_CUSTOM C
JOIN TBL_BUY B ON (B.CUSTOMID = C.CUSTOM_ID)
JOIN TBL_PRODUCT P ON (P.PCODE = B.PCODE)
WHERE C.CUSTOM_ID = 'mina012'
GROUP BY C.CUSTOM_ID;

-- 2.
SELECT C.NAME, B.PCODE
FROM TBL_CUSTOM C
JOIN TBL_BUY B ON (B.CUSTOMID = C.CUSTOM_ID)
WHERE C.NAME LIKE '%길동';

-- 3.
SELECT C.NAME, B.PCODE, P.PNAME
FROM TBL_BUY B
JOIN TBL_PRODUCT P ON (P.PCODE = B.PCODE)
JOIN TBL_CUSTOM C ON (C.CUSTOM_ID = B.CUSTOMID)
WHERE C.AGE >= 25;

-- 4.
SELECT SUM(P.PRICE)
FROM TBL_PRODUCT P
JOIN TBL_BUY B ON (B.PCODE = P.PCODE)
WHERE P.PNAME LIKE '%사과%'
GROUP BY P.PRICE;

-- 5.
SELECT CUSTOM_ID
FROM TBL_CUSTOM C
JOIN TBL_BUY B ON (B.CUSTOMID = C.CUSTOM_ID)
JOIN TBL_PRODUCT P ON (P.PCODE = B.PCODE)
GROUP BY C.CUSTOM_ID
HAVING SUM(P.PRICE * B.QUANTITY) BETWEEN 100000 AND 200000;
------------------- B ---------------
-- 1
SELECT PCODE, AGE
FROM TBL_CUSTOM 
JOIN TBL_BUY ON (CUSTOMID = CUSTOM_ID)
WHERE AGE BETWEEN 20 AND 29
ORDER BY AGE ASC;

-- 2
SELECT SUM(QUANTITY)
FROM TBL_CUSTOM
JOIN TBL_BUY ON (CUSTOMID = CUSTOM_ID)
WHERE AGE = (SELECT MAX(AGE)
             FROM TBL_CUSTOM);
             
-- 3           
SELECT C.CUSTOM_ID, P.PRICE
FROM TBL_CUSTOM C
JOIN TBL_BUY B ON (B.CUSTOMID = C.CUSTOM_ID)
JOIN TBL_PRODUCT P ON (P.PCODE = B.PCODE)
WHERE B.BUY_DATE BETWEEN '23/07/01' AND '23/12/31'
ORDER BY P.PRICE DESC;
             
-- 4
SELECT CUSTOM_ID, NAME, AGE, EMAIL
FROM TBL_CUSTOM
JOIN TBL_BUY ON (CUSTOMID = CUSTOM_ID)
WHERE TO_CHAR(BUY_DATE, 'YYYY') = 2024 AND QUANTITY >= 1;

-- 5
SELECT C.NAME, B.PCODE, P.PRICE
FROM TBL_CUSTOM C
JOIN TBL_BUY B ON (B.CUSTOMID = C.CUSTOM_ID)
JOIN TBL_PRODUCT P ON (P.PCODE = B.PCODE)
ORDER BY C.CUSTOM_ID ASC;

------------------- C ---------------
-- 1
SELECT CUSTOMID, PRICE, AVG(QUANTITY)
FROM TBL_PRODUCT P
JOIN TBL_BUY B ON (B.PCODE = P.PCODE)
WHERE PRICE >= 10000
GROUP BY P.PRICE, B.CUSTOMID;

-- 2
SELECT NAME, QUANTITY, BUY_DATE
FROM TBL_CUSTOM
JOIN TBL_BUY ON (CUSTOMID = CUSTOM_ID)
WHERE PCODE = 'JINRMN5';

-- 4
SELECT PNAME, P.PCODE, SUM(PRICE), SUM(QUANTITY)
FROM TBL_PRODUCT P
JOIN TBL_BUY B ON (B.PCODE = P.PCODE)
WHERE TO_CHAR(BUY_DATE, 'YYYY') = 2023
GROUP BY PNAME, P.PCODE
ORDER BY P.PCODE ASC;

-- 5
SELECT PCODE, QUANTITY, PRICE
FROM TBL_BUY B
JOIN TBL_PRODUCT P ON (P.PCODE = B.PCODE)
JOIN TBL_CUSTOM C ON (COUSTOMID = COUSTOM_ID)




------------------- D ---------------
--D-1. 진라면을 가장 많이 구매한 회원을 구매금액이 높은 순으로 회원아이디와 총 진라면 구매금액을 보여주세요.(조하연)
--                             ㄴ 서브쿼리 없이 조인만 사용
SELECT CUSTOMID, SUM(PRICE)
FROM TBL_BUY B
JOIN TBL_PRODUCT P ON (P.PCODE = B.PCODE)
GROUP BY CUSTOMID
ORDER BY SUM(PRICE) DESC;

 
--D-2. 판매 갯수가 가장 많은 순서로 상품 을 정렬하고 총 팔린 금액을 출력하시오.(한진만)
--        판매 개수가 같으면 상품 코드 순서로 정렬합니다.            ㄴ 동등 조인으로 조회
SELECT P.PCODE, P.PNAME, SUM(P.PRICE B.QUANTITY), SUM(B.QUANTITY)
FROM TBL_PRODUCT P
JOIN TBL_BUY B ON (B.PCODE = P.PCODE)
GROUP BY P.PCODE, P.PNAME
ORDER BY SUM(B.QUANTITY) DESC;



--D-3. 진라면을 구매한 고객들의 평균 나이를 제품코드(PCODE)와 함께출력해 주세요.(황병훈)
SELECT AVG(AGE), PCODE
FROM TBL_CUSTOM
JOIN TBL_BUY ON (CUSTOMID = CUSTOM_ID)
GROUP BY PCODE;


--D-4. 30세 미만 회원별 구매금액을 구하고 회원으로 그룹바이해서 구매금액 합계가 큰 순으로 정렬(조지수)
--                         ㄴ 3개의 테이블 조인
SELECT C.NAME, C.CUSTOM_ID, SUM(B.QUANTITY * P.PRICE)
FROM TBL_CUSTOM C
JOIN TBL_BUY B ON (B.CUSTOMID = C.CUSTOM_ID)
JOIN TBL_PRODUCT P ON (P.PCODE = B.PCODE)
GROUP BY C.NAME, C.CUSTOM_ID
ORDER BY SUM(B.QUANTITY * P.PRICE) DESC;




