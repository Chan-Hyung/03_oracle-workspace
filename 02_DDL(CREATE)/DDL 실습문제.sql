--실습문제--

--도서관리 프로그램을 만들기 위한 테이블을 만들기

--이때, 제약조건에 이름을 부여할 것

-- 각 컬럼에 주석달기





?

--1. 출판사들에 대한 데이터를 담기 위한 출판사 테이블(TB_PUBLISHER)
--컬럼: PUB_NO(출판사번호) --기본키(PUBLISHER_PK)
-- PUB_NAME(출판사명) --NOT NULL(PUBLICHSER_NN)
-- PHONE(출판사전화번호) --제약조건 없음
--3개 정도의 샘플 데이터 추가하기
DROP TABLE TB_PUBLISHER;
CREATE TABLE TB_PUBLISHER(
    PUB_NO NUMBER CONSTRAINT PUBLISHER_PK PRIMARY KEY,
    PUB_NAME VARCHAR2(4) CONSTRAINT PUBLISHER_NN NOT NULL,
    PHONE VARCHAR2(10)
);

INSERT INTO TB_PUBLISHER VALUES(1, 'ASDF', '1234');
INSERT INTO TB_PUBLISHER VALUES(2, 'QEWR', '5678');
INSERT INTO TB_PUBLISHER VALUES(3, 'ZXCV', '1357');

SELECT * FROM TB_PUBLISHER;


--2. 도서들에 대한 데이터를 담기 위한 도서 테이블(TB_BOOK)
--컬럼: BK_NO(도서번호) --기본키(BOOK_PK)
-- BK_TITLE(도서명) --NOT NULL(BOOK_NN_TITLE)
-- BK_AUTHOR(저자명) --NOT NULL(BOOK_NN_AUTHOR)
-- BK_PRICE(가격)
-- BK_STOCK(재고) --기본값 1로 지정
-- BK_PUB_NO(출판사번호) --외래키(BOOK_FK)(TB_PUBLISHER 테이블을 참조하도록)
-- 이때 참조하고 있는 부모데이터 삭제 시 자식데이터도 삭제되도록 설정
--5개 정도의 샘플 데이터 추가하기
DROP TABLE TB_BOOK;
CREATE TABLE TB_BOOK(
    BK_NO NUMBER CONSTRAINT BOOK_PK PRIMARY KEY,
    BK_TITLE VARCHAR2(100) CONSTRAINT BOOK_NN_TITLE NOT NULL,
    BK_AUTHOR VARCHAR2(100) CONSTRAINT BOOK_NN_AUTHOR NOT NULL,
    BK_PRICE NUMBER(10),
    BK_STOCK NUMBER(10) DEFAULT '1',
    BK_PUB_NO NUMBER,
    CONSTRAINT BOOK_FK 
    FOREIGN KEY(BK_PUB_NO) 
    REFERENCES TB_PUBLISHER(PUB_NO) 
    ON DELETE CASCADE
);

INSERT INTO TB_BOOK VALUES(1, 'QWER', '1111', 11111, 1, 1);
INSERT INTO TB_BOOK VALUES(2, 'ASDF', '2222', 22222, 2, 1);
INSERT INTO TB_BOOK VALUES(3, 'ZXCV', '3333', 33333, 3, 1);
INSERT INTO TB_BOOK VALUES(4, 'TYUI', '4444', 44444, 4, 1);
INSERT INTO TB_BOOK VALUES(5, 'GHJK', '5555', 55555, 5, 1);

SELECT * FROM TB_BOOK;






--3. 회원에 대한 데이터를 담기 위한 회원 테이블(TB_MEMBER)
--컬럼명: MEMBER_NO(회원번호) --기본키(MEMBER_PK)
-- MEMBER_ID(아이디) --중복금지(MEMBER_UQ)   
--MEMBER_PWD(비밀번호) NOT NULL(MEMBER_NN_PWD)   
--MEMBER_NAME(회원명) NOT NULL(MEMBER_NN_NAME)   
--GENDER(성별) 'M' 또는 'F'로 입력되도록 제한(MEMBER_CK_GEN)   
--ADDRESS(주소)   
--PHONE(연락처)   
--STATUS(탈퇴여부) --기본값으로 'N' 그리고 'Y' 혹은 'N'으로 입력되도록 제약조건(MEMBER_CK_STA)
--ENROLL_DATE(가입일) --기본값으로 SYSDATE, NOT NULL 조건(MEMBER_NN_EN)   
--5개 정도의 샘플 데이터 추가하기
DROP TABLE TB_MEMBER;
CREATE TABLE TB_MEMBER(
    MEMBER_NO NUMBER CONSTRAINT MEMBER_PK PRIMARY KEY,
    MEMBER_ID VARCHAR2(10) CONSTRAINT MEMBER_UQ UNIQUE,
    MEMBER_PWD VARCHAR2(10) CONSTRAINT MEMBER_NN_PWD NOT NULL,
    MEMBER_NAME VARCHAR2(30) CONSTRAINT MEMBER_NN_NAME NOT NULL,
    GENDER CHAR(3) CONSTRAINT MEMBER_CK_GEN CHECK(GENDER IN ('남', '여')),
    ADDRESS VARCHAR2(20),
    PHONE VARCHAR2(10),
    STATUS CHAR(1) DEFAULT 'N'
    CONSTRAINT MEMBER_CK_STA CHECK(STATUS IN('Y', 'N')),
    ENROLL_DATE DATE DEFAULT SYSDATE CONSTRAINT MEMBER_NN_EN NOT NULL
);

INSERT INTO TB_MEMBER VALUES(1, 'QWER', '1111', 'QWER', '남', '11111111', '111111111', 'Y', '25/01/01');
INSERT INTO TB_MEMBER VALUES(2, 'ASDF', '2222', 'QWER', '여', '22222222', '222222222', 'N', '25/02/02');
INSERT INTO TB_MEMBER VALUES(3, 'ZXCV', '3333', 'QWER', '남', '33333333', '333333333', 'N', '25/03/03');
INSERT INTO TB_MEMBER VALUES(4, 'TYUI', '4444', 'QWER', '남', '44444444', '444444444', 'Y', '25/04/04');
INSERT INTO TB_MEMBER VALUES(5, 'GHJK', '5555', 'QWER', '여', '55555555', '555555555', 'Y', '25/05/05');

SELECT * FROM TB_MEMBER;





--4. 도서를 대여한 회원에 대한 데이터를 담기 위한 대여목록 테이블(TB_RENT)

--컬럼:

--RENT_NO(대여번호) --기본키(RENT_PK)

--RENT_MEM_NO(대여회원번호) --외래키(RENT_FK_MEM) TB_MEMBER와 참조하도록

--이때 부모데이터 삭제 시 NULL값이 되도록 옵션 설정

--RENT_BOOK_NO(대여도서번호) --외래키(RENT_FK_BOOK) TB_BOOK와 참조하도록

--이때 부모데이터 삭제 시 NULL값이 되도록 옵션설정

--RENT_DATE(대여일) --기본값 SYSDATE

--샘플데이터 3개정도 추가하기
DROP TABLE TB_RENT;
CREATE TABLE TB_RENT(
    --RENT_NO NUMBER CONSTRAINT RENT_PK PRIMARY KEY,
    --RENT_MEM_NO NUMBER CONSTRAINT RENT_FK_MEM FOREIGN KEY(RENT_MEM_NO) REFERENCES TB_MEMBER(MEMBER_NO) ON DELETE SET NULL,
    
    RENT_NO NUMBER PRIMARY KEY,
    RENT_MEM_NO NUMBER REFERENCES TB_MEMBER(MEMBER_NO) ON DELETE SET NULL, 
    RENT_BOOK_NO NUMBER REFERENCES TB_BOOK(BK_NO) ON DELETE CASCADE,
    RENT_DATE DATE DEFAULT SYSDATE
);

INSERT INTO TB_RENT VALUES(1, 1, 1, DEFAULT);
INSERT INTO TB_RENT VALUES(2, 2, 2, '2025/02/02');
INSERT INTO TB_RENT VALUES(3, 3, 3, '2025/03/03');


SELECT * FROM TB_RENT;


--2번 도서를 대여한 회원의 이름, 아이디, 대여일, 반납예정일(대여일+7)을 조회하시오.
SELECT MEMBER_NAME AS "이름", MEMBER_ID AS "아이디", RENT_DATE AS "대여일", RENT_DATE+7 AS "반납예정일"
FROM(SELECT *
        FROM TB_BOOK B, TB_PUBLISHER P, TB_MEMBER M, TB_RENT R
        WHERE B.BK_PUB_NO = P.PUB_NO
        AND B.BK_NO = R.RENT_BOOK_NO 
        AND M.MEMBER_ID = R.RENT_MEM_NO)
WHERE RENT_BOOK_NO = 2
